{"version":3,"sources":["components/Header.tsx","components/JoinUs.tsx","components/ContactUs.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","onScrollToJoinUs","onScrollToContactUs","as","style","fontFamily","fontWeight","fontSize","lineHeight","marginTop","spacing","direction","align","colorScheme","size","onClick","JoinUs","padding","maxW","textAlign","marginY","ContactUs","scrollToHeadUs","toast","useToast","useForm","register","handleSubmit","errors","formState","reset","w","paddingX","base","md","onSubmit","data","title","description","status","duration","isClosable","width","type","bg","color","placeholder","isInvalid","Boolean","fullName","required","minLength","maxLength","email","message","App","height","display","justifyContent","alignItems","flexDirection","headRef","useRef","joinUsRef","contactUsRef","scrollToContactUs","current","scrollIntoView","behavior","className","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc8fde33.chunk.js","sourcesContent":["import { FC, Fragment } from \"react\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { Button } from \"@chakra-ui/react\";\n\nconst Header: FC<any> = ({ onScrollToJoinUs, onScrollToContactUs }) => {\n  const style = {\n    fontFamily: \"Pacifico\",\n    fontWeight: 400,\n    fontSize: \"2.5em\",\n    lineHeight: \"1.00em\",\n  };\n  return (\n    <Fragment>\n      <Box as=\"h1\" style={style}>\n        Shoutpond\n      </Box>\n\n      <Box as=\"h3\" fontFamily=\"Pacifico\" marginTop=\"10\" fontSize=\"1.5em\">\n        Coming soon!\n      </Box>\n\n      <Text fontSize=\"1em\" fontWeight=\"400\">\n        Get ready! Something really cool is coming!\n      </Text>\n\n      <Stack spacing={4} direction=\"row\" align=\"center\" marginTop=\"10\">\n        <Button colorScheme=\"teal\" size=\"lg\" onClick={onScrollToJoinUs}>\n          Join us!\n        </Button>\n        <Button colorScheme=\"teal\" size=\"lg\" onClick={onScrollToContactUs}>\n          Contact us!\n        </Button>\n      </Stack>\n    </Fragment>\n  );\n};\n\nexport default Header;\n","import { FC } from \"react\";\nimport { Box, ListItem, Text, UnorderedList } from \"@chakra-ui/layout\";\nimport { Button } from \"@chakra-ui/button\";\n\nconst JoinUs: FC<any> = ({ onScrollToContactUs }) => {\n  return (\n    <Box padding=\"2\" maxW=\"1000px\" textAlign=\"center\">\n      <Box\n        as=\"h3\"\n        fontFamily=\"Pacifico\"\n        marginTop=\"10\"\n        fontSize=\"1.5em\"\n        textAlign=\"center\"\n      >\n        Join us\n      </Box>\n\n      <Text fontSize=\"1em\" fontWeight=\"400\" padding=\"2\" maxW=\"1000px\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum\n        vulputate arcu nunc, et fringilla libero luctus at. Ut non euismod sem,\n        at maximus tellus. Fusce rutrum eu odio ut eleifend. In luctus mi sit\n        amet ex consectetur, a fermentum diam semper. Nulla at luctus orci.\n        Vestibulum eu congue libero, eget vulputate enim. Proin ultricies\n        ullamcorper mi, ac euismod ipsum. Praesent semper pharetra urna, sit\n        amet fringilla ipsum sagittis sit amet. Curabitur in porta mi. Sed\n        commodo a nulla ullamcorper elementum. In hac habitasse platea dictumst.\n        Quisque imperdiet a felis at convallis. Aliquam ullamcorper lobortis\n        porttitor. Maecenas a neque dignissim, consectetur libero mattis,\n        posuere ante. Morbi faucibus in velit at hendrerit.\n      </Text>\n\n      <Box as=\"h3\" fontFamily=\"Pacifico\" marginY=\"5\" fontSize=\"1.2em\">\n        Good to have!\n      </Box>\n      <UnorderedList textAlign=\"left\">\n        <ListItem>Lorem ipsum dolor sit amet</ListItem>\n        <ListItem>Consectetur adipiscing elit</ListItem>\n        <ListItem>Integer molestie lorem at massa</ListItem>\n        <ListItem>Facilisis in pretium nisl aliquet</ListItem>\n      </UnorderedList>\n\n      <Button colorScheme=\"teal\" size=\"lg\" marginTop=\"10\" onClick={onScrollToContactUs}>\n        Contact us!\n      </Button>\n    </Box>\n  );\n};\n\nexport default JoinUs;\n","import { FC } from \"react\";\nimport {\n  Box,\n  Button,\n  Input,\n  Textarea,\n  useToast,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { useForm } from \"react-hook-form\";\n\nconst ContactUs: FC<any> = ({ scrollToHeadUs }) => {\n  const toast = useToast();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm();\n\n  const onSubmit = (data: Record<string, any>) => {\n    reset();\n    scrollToHeadUs();\n    toast({\n      title: \"Message sent!\",\n      description: \"Thank you for your message, we will contact you soon.\",\n      status: \"success\",\n      duration: 9000,\n      isClosable: true,\n    });\n  };\n\n  return (\n    <Box w=\"100%\" maxW=\"900px\" paddingX={{ base: 2, md: 5 }} textAlign=\"center\">\n      <Box as=\"h3\" fontFamily=\"Pacifico\" marginY=\"10\" fontSize=\"1.5em\">\n        Contact us\n      </Box>\n      <form onSubmit={handleSubmit(onSubmit)} style={{ width: \"100%\" }}>\n        <VStack>\n          <Input\n            type=\"text\"\n            bg=\"white\"\n            w=\"100%\"\n            color=\"black\"\n            placeholder=\"Full name\"\n            isInvalid={Boolean(errors.fullName)}\n            {...register(\"fullName\", {\n              required: \"Please enter first name\",\n              minLength: 6,\n              maxLength: 80,\n            })}\n          />\n          <Input\n            type=\"email\"\n            bg=\"white\"\n            color=\"black\"\n            placeholder=\"Email\"\n            isInvalid={Boolean(errors.email)}\n            {...register(\"email\", {\n              required: \"Please enter email\",\n              minLength: 6,\n              maxLength: 80,\n            })}\n          />\n          <Textarea\n            bg=\"white\"\n            color=\"black\"\n            placeholder=\"Message\"\n            isInvalid={Boolean(errors.message)}\n            {...register(\"message\", {\n              required: \"Please enter message\",\n              minLength: 6,\n              maxLength: 800,\n            })}\n          />\n          <Box />\n          <Button colorScheme=\"teal\" size=\"lg\" type=\"submit\">\n            Submit\n          </Button>\n        </VStack>\n      </form>\n    </Box>\n  );\n};\n\nexport default ContactUs;\n","import { Box, ChakraProvider, VStack } from \"@chakra-ui/react\";\n\nimport Header from \"./components/Header\";\nimport JoinUs from \"./components/JoinUs\";\nimport ContactUs from \"./components/ContactUs\";\n\nimport \"./App.css\";\nimport { useRef } from \"react\";\n\nfunction App() {\n  const style = {\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  } as any;\n\n  const headRef: any = useRef();\n  const joinUsRef: any = useRef();\n  const contactUsRef: any = useRef();\n\n  const scrollToHeadUs = () => {\n    headRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const scrollToJoinUs = () => {\n    joinUsRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const scrollToContactUs = () => {\n    contactUsRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  return (\n    <ChakraProvider>\n      <VStack className=\"shoutpond\" align=\"stretch\">\n        <Box style={style} ref={headRef}>\n          <Header\n            onScrollToJoinUs={() => scrollToJoinUs()}\n            onScrollToContactUs={() => scrollToContactUs()}\n          />\n        </Box>\n        <Box style={style} ref={joinUsRef}>\n          <JoinUs onScrollToContactUs={() => scrollToContactUs()} />\n        </Box>\n        <Box style={style} ref={contactUsRef}>\n          <ContactUs scrollToHeadUs={() => scrollToHeadUs()} />\n        </Box>\n      </VStack>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}